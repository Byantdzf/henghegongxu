<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import {service} from './config.js'
  import UpdateManager from './mixins/UpdateManager'
  // var ga = require('./ga.js')
  // var GoogleAnalytics = ga.GoogleAnalytics
  // var HitBuilders = ga.HitBuilders
  // const socket = require('./utils/sockte')

  // 缓存上一个页面
  // console.log(this.getCurrentPages())
  //  var yeast = require('yeast')

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/tabBar/home',
        'pages/tabBar/contact',
        'pages/tabBar/issue',
        'pages/tabBar/user',
        'pages/tabBar/demand',
        'pages/tabBar/supply',
        'pages/register'
      ],
      'permission': {
        'scope.userLocation': {
          'desc': '你的位置信息将用于小程序位置接口的效果展示'
        }
      },
      'subPackages': [
        {
          'root': 'pages/users',
          'pages': [
            'collect',
            'bookDetail',
            'apply',
            'setting',
            'about',
            // 'cropper',
            'cooperation',
            'question'
          ]
        },
        {
          'root': 'pages/job',
          'pages': [
            'detail',
            'member'
          ]
        },
        {
          'root': 'pages/article',
          'pages': [
            'detail',
            'list'
          ]
        }
      ],
      window: {
        navigationBarTitleText: '兼职',
        navigationBarTextStyle: 'white',
        navigationBarBackgroundColor: '#0075c5',
        backgroundColor: '#eaeaea',
        backgroundTextStyle: 'light',
        enablePullDownRefresh: true
      },
      tabBar: {
        color: '#666666',
        selectedColor: '#0075c5',
        backgroundColor: '#ffffff',
        borderStyle: 'black',
        list: [{
          pagePath: 'pages/tabBar/home',
          selectedIconPath: './images/tabbar/homeA.png',
          iconPath: './images/tabbar/home.png',
          text: '首页'
        }, {
          pagePath: 'pages/tabBar/issue',
          selectedIconPath: './images/tabbar/issueA.png',
          iconPath: './images/tabbar/issue.png',
          text: '发布'
        }, {
          pagePath: 'pages/tabBar/contact',
          selectedIconPath: './images/tabbar/iPhoneA.png',
          iconPath: './images/tabbar/iPhone.png',
          text: '联系方式'
        }, {
          pagePath: 'pages/tabBar/user',
          selectedIconPath: './images/tabbar/myA.png',
          iconPath: './images/tabbar/my.png',
          text: '我的'
        }]
      },
      networkTimeout: { // 请求时间
        request: 10000,
        downloadFile: 10000
      },
      debug: true,
      'navigateToMiniProgramAppIdList': [ // 需要关联的小程序
      ]
    }

    globalData = {
      user: null,
      cart: null,
      tracker: null,
      windowWidth: 0,
      windowHeight: 0
    }

    constructor() {
      super()
      this.use('requestfix')
    }

    onLaunch(options) {
      if (options.referrerInfo.appId) {
        wx.setStorageSync('from_platform', options.referrerInfo.appId)
      }
      let vm = this
      wx.getSystemInfo({
        success(res) {
          vm.globalData.windowHeight = res.windowHeight
          vm.globalData.windowWidth = res.windowWidth
        }
      })
    }

    onShow(options) {
      // this.startWebSocket()
      UpdateManager
      // if (options.scene == 1037 && arguments.length !== 0) {
      //   if (options.referrerInfo.extraData) {
      //     wx.setStorageSync('skip', true)
      //     let uid = options.referrerInfo.extraData.uid
      //     wx.setStorageSync('uid', uid)
      //     wepy.login({
      //       success: (res) => {
      //         let code = res.code
      //         let data = {
      //           wechat_code: code
      //         }
      //         wx.request({
      //           url: service.register_infor,
      //           header: {
      //             'Content-Type': 'application/x-www-form-urlencoded'
      //           },
      //           method: 'get',
      //           data: data,
      //           success: function (res) {
      //             let isRregister = res.data.data.is_register
      //             if (isRregister == 1) {
      //               wepy.login({
      //                 success: (res) => {
      //                   let codeV = res.code
      //                   wx.request({
      //                     url: service.skip + '/infor',
      //                     header: {'Content-Type': 'application/x-www-form-urlencoded'},
      //                     method: 'get',
      //                     data: {
      //                       wechat_code: codeV,
      //                       uid: uid
      //                     },
      //                     success: function (res) {
      //                       let token = res.data.data.access_token
      //                       wx.setStorageSync('token', token)
      //                       wx.removeStorageSync('skip')
      //                     }
      //                   })
      //                 },
      //                 fail: (res) => {
      //                   console.log('wepy.login.fail:', res)
      //                 }
      //               })
      //             } else {
      //               let iv = res.iv
      //               let encryptedData = res.encryptedData
      //               wepy.login({
      //                 success: (res) => {
      //                   let codeV = res.code
      //                   wx.request({
      //                     url: service.skip,
      //                     header: {'Content-Type': 'application/x-www-form-urlencoded'},
      //                     method: 'get',
      //                     data: {
      //                       wechat_code: codeV,
      //                       uid: uid,
      //                       iv: iv,
      //                       encryptedData: encryptedData
      //                     },
      //                     success: function (res) {
      //                       let token = res.data.data.access_token
      //                       wx.setStorageSync('token', token)
      //                       wx.removeStorageSync('skip')
      //                     }
      //                   })
      //                 },
      //                 fail: (res) => {
      //                   console.log('wepy.login.fail:', res)
      //                 }
      //               })
      //             }
      //           }
      //         })
      //       },
      //       fail: (res) => {
      //         console.log('wepy.login.fail:', res)
      //       }
      //     })
      //   }
      // }
      if (options.scene == 1044) {
        // this.openshareTicket(options)
      }
    }

    openshareTicket(options) {
      wx.getShareInfo({
        shareTicket: options.shareTicket,
        success: function (res) {
          let encryptedData = res.encryptedData
          let iv = res.iv
          let code = ''
          wepy.login({
            success: (res) => {
              code = res.code
              let data = {
                code: code,
                iv: iv,
                encryptedData: encryptedData
              }
              wx.request({
                url: service.infor,
                header: {
                  'Content-Type': 'application/x-www-form-urlencoded'
                },
                method: 'POST',
                data: data,
                success: function (res) {
                  let data = res.data.data
                  wx.setStorageSync('openGId', data.openGId)
                }
              })
            },
            fail: (res) => {
              console.log('wepy.login.fail:', res)
            }
          })
        }
      })
    }

    // startWebSocket() { // 实时通信
    //   let that = this
    //   socket.connect((status, ws) => {
    //     let Authorization = 'Bearer ' + wx.getStorageSync('token')
    //     let userId = wx.getStorageSync('user_id')
    //     let data = {
    //       'channel': 'private-users.' + userId + '.notices',
    //       'auth': {'headers': {'Authorization': Authorization}}
    //     } // 需要发送数据
    //     if (status) {
    //       ws.emit('subscribe', data, res => {
    //       })
    //     }
    //   })
    //   wx.onSocketOpen(function (res) {
    //     console.log('WebSocket连接已打开！')
    //   })
    //   wx.onSocketError(function (res) {
    //     console.log('WebSocket连接打开失败，请检查！')
    //   })
    //   wx.onSocketClose(function (res) {
    //     console.log('WebSocket 已关闭！')
    //   })
    //   wx.onSocketMessage(function (res) {
    //     if (res.data.length > 4) {
    //       let reg = /^[0-9]{1,2}/,
    //         str2 = res.data.replace(reg, '')
    //       if (JSON.parse(str2)[2]) {
    //         that.socketNews(JSON.parse(str2)[2])
    //       }
    //     }
    //   })
    // }

    // socketNews(data) {
    //   if (JSON.stringify(data) != '{}' && data.new_notice_count + data.new_message_count != 0) {
    //     let {new_message_count} = data
    //     if (new_message_count > 0) {
    //       wx.setTabBarBadge({
    //         index: 2,
    //         text: `${new_message_count}`
    //       })
    //     } else {
    //       wx.removeTabBarBadge({
    //         index: 2
    //       })
    //     }
    //   }
    //   wx.showToast({
    //     title: '有人给你发消息啦！',
    //     icon: 'none',
    //     duration: 1800
    //   })
    //   this.vibrateLong()
    // }

    // 手机震动
    vibrateLong() {
      wx.vibrateLong({
        success: () => {
          console.log('0000')
        }
      })
    }

    onShareAppMessage(title) {
      return {
        title: title,
        success: function (res) { // 转发成功
          console.log(res.errMsg)
        },
        fail: function (res) { // 转发失败
          console.log(res.errMsg)
        }
      }
    }

    /* ============= 工具方法（app没法用mixins，就再写一遍了） ============= */
    isObject(item) {
      return typeof item === 'object' && !this.isArray(item)
    }

    isArray(item) {
      return Object.prototype.toString.apply(item) === '[object Array]'
    }

    isUndefined(item) {
      return typeof item === 'undefined'
    }

    // Google analytics
    getTracker(name, text) {
    //   if (!this.globalData.tracker) {
    //     // 初始化GoogleAnalytics Tracker
    //     this.globalData.tracker = GoogleAnalytics.getInstance(this)
    //       .setAppName('兼职')
    //       .setAppVersion('v0.1')
    //       .newTracker('UA-98664364-7')
    //   }
    //   var t = this.globalData.tracker
    //   t.setScreenName(text)
    //   t.send(new HitBuilders.ScreenViewBuilder().build())
    //   t.send(new HitBuilders.ExceptionBuilder()
    //     .setDescription(wx.getStorageSync('message'))
    //     .setFatal(false).build())
    //   t.set('&uid', '12345')
    //   t.send(new HitBuilders.EventBuilder()
    //     .setCategory('UX')
    //     .setAction('User Sign In')
    //     .build())
    }

    /* ========================= 更新缓存信息 ======================== */

    $updateGlobalData(name, obj) {
      // 校验: globalData
      if (!this.globalData) return
      // 校验: 操作字段
      if (typeof name !== 'string' || name === '') return {}
      // 取已有信息
      const info = this.globalData[name] || {}
      // 更新缓存
      if (obj && this.isObject(obj)) {
        // Object合并第一层
        this.globalData[name] = Object.assign({}, info, obj)
      } else if (!this.isUndefined(obj)) {
        // 其他非undefined数据直接覆盖
        this.globalData[name] = obj
      }
      this.$apply && this.$apply()
      console.info(`[${obj ? 'UPDATE' : 'GET'} GlobalData ${name}]:`, this.globalData[name])
      return this.globalData[name]
    }
  }
</script>

<style lang="less">
  @import "./styles/weui/index.less";
  @import "./styles/custom/index.less";
  @import "./styles/custom/theme.less";
  view{
    font-weight: normal;
  }
</style>
