<template>
  <view class="commodity_screen" bindtap="hideModal" wx:if="{{showModalStatus}}"></view>
  <!--弹出框  -->
  <view animation="{{animationData}}" class="commodity_attr_box" wx:if="{{showModalStatus}}">
    <view class="model_page-user ff">
      <view class="user_box text-center">
        <image src="https://images.ufutx.com/201907/12/f260a5ad7f97c949d955d9daeec0caac.png" mode="widthFix" class="bc_image"></image>
        <view class="user_photo ff">
          <image src="{{photo}}" mode="aspectFill"></image>
        </view>
        <view class="userInfoBox" wx:for="{{information}}" wx:key="index">
          <view class="item_title flo_l font_30">{{item.title}}:</view>
          <view class="item_value flo_r font_30">
            <block wx:if="{{item.type === 'input'}}">
              <input class="_bc_value flo_r text-right" type="text" placeholder="点击填写" value="{{item.value}}"  @change="pickerChange({{index}})"/>
            </block>
            <block wx:if="{{item.type === 'picker'}}">
              <view class="_bc_picker flo_r text-right">
                <block wx:if="{{item.mode === 'selector'}}">
                  <picker value="{{item.pickerIndex}}" mode="{{item.mode}}" range="{{item.pickerList}}" @change="pickerChange({{index}})">
                    <view class="picker ">{{item.pickerList[item.pickerIndex]}}</view>
                  </picker>
                </block>
                <block wx:if="{{item.mode === 'date'}}">
                  <picker mode="{{item.mode}}"  value="{{item.pickerIndex}}"  @change="pickerChange({{index}})">
                    <view class="picker">{{item.value===''?'请选择':item.value}}</view>
                  </picker>
                </block>
                <block wx:if="{{item.mode === 'job_type'}}">
                  <picker mode="multiSelector" @change="bindMultiPickerChange2" @columnchange="bindMultiPickerColumnChange2" value="{{multiIndex2}}" range="{{objectMultiArray}}" range-key="name">
                    <view class="picker">
                      {{objectMultiArray[0][multiIndex2[0]].name}} - {{objectMultiArray[1][multiIndex2[1]].name}}
                    </view>
                  </picker>
                </block>
                <block wx:if="{{item.mode === 'address'}}">
                  <picker mode="multiSelector" @change="bindMultiPickerChange" @columnchange="bindMultiPickerColumnChange" value="{{multiIndex}}" range="{{addressArray}}" range-key="name">
                    <view class="picker">
                      {{addressArray[0][multiIndex[0]].name}} - {{addressArray[1][multiIndex[1]].name}}
                    </view>
                  </picker>
                </block>
              </view>
            </block>
          </view>
        </view>
        <view class="font_30 bc_btn white" @tap="save">提交</view>
      </view>
    </view>
    <view class="clearfloat"></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from '../mixins/base'
  import {service} from '../config.js'
  import http from '../mixins/http'

  export default class modal extends wepy.component {
    mixins = [base, http]
    props = {
      type: {
        type: ''
      }
    }
    components = {
    }
    data = {
      showModalStatus: false,
      showChangeState: false,
      animationData: {},
      photo: 'http://images.ufutx.com/201902/25/542cc218e40cbc8a8e3a9ce23d7f4789.gif',
      StateText: '',
      information: [
        {
          title: '真实姓名',
          name: 'name',
          value: '',
          type: 'input',
          pickerIndex: 0
        },
        {
          title: '性别',
          name: 'sex',
          value: '1',
          type: 'picker',
          mode: 'selector',
          pickerList: ['男', '女'],
          pickerIndex: 0
        },
        {
          title: '出生日期',
          name: 'birthday',
          value: '',
          mode: 'date',
          type: 'picker',
          pickerList: [],
          pickerIndex: 0
        },
        {
          title: '学历',
          name: 'ducation',
          value: '大专',
          mode: 'selector',
          type: 'picker',
          pickerList: ['大专', '本科', '硕士', '博士', '其他'],
          pickerIndex: 0
        },
        {
          title: '学校',
          name: 'school',
          value: '',
          type: 'input',
          pickerIndex: 0
        },
        {
          title: '地址',
          name: 'address',
          value: '其他',
          mode: 'address',
          type: 'picker',
          pickerList: [],
          pickerIndex: 3
        },
        {
          title: '想要做的工作类型',
          name: 'job_type',
          value: '其他',
          mode: 'job_type',
          type: 'picker',
          pickerList: [],
          pickerIndex: 3
        },
        {
          title: '倾向的活动类型',
          name: 'payType',
          value: 'DAILY',
          mode: 'selector',
          type: 'picker',
          pickerList: ['每日', '每月'],
          pickerIndex: 0
        }
      ],
      industry: '',
      industry_sub: '',
      multiIndex2: [0, 0],
      objectMultiArray: [],
      Business: [],
      multiIndex: [0, 0],
      addressArray: [],
      address: [],
      userInfo: {}
    }
    watch = {
    }

    onLoad() {
      this.objectMultiArray = []
      this.addressArray = []
      this.geJobType()
      this.initPageData()
      this.getAddress()
      this.$apply()
    }
    // 初始化页面数据
    initPageData() {
      this.$get({url: `${service.host}/user`}, {
        success: ({code, data}) => {
          this.photo = data.avatar
          this.userInfo = data
          this.information[0].value = data.name
          this.information[1].value = data.sex ? data.sex : 1
          this.information[2].value = data.birthday ? data.birthday : ''
          this.information[3].value = data.ducation ? data.ducation : ''
          this.information[4].value = data.school ? data.school : ''
          // this.information[5].value = data.sex
          // this.information[6].value = data.sex
          this.information[7].pickerIndex = data.pay_type == 'MONTHLY'?1:0
          this.$apply()
        }
      })
    }

    geJobType() {
      let that = this
      this.$get({url: `${service.host}/job/categories`}, {
        success: ({code, data}) => {
          let result = data
          that.Business = result
          let IndustryArr = []
          result.forEach(function (item, index, arr) {
            IndustryArr.push(arr[index])
          })
          console.log(IndustryArr)
          that.objectMultiArray.push(IndustryArr)
          that.objectMultiArray.push(result[0].sub_categories)
          that.$apply()
        },
        fail: ({code, data}) => {
        },
        complete: () => {
        }
      })
    }
    getAddress() {
      let that = this
      this.$get({url: `${service.host}/addresses`}, {
        success: ({code, data}) => {
          let result = data
          that.address = result
          let IndustryArr = []
          result.forEach(function (item, index, arr) {
            IndustryArr.push(arr[index])
          })
          that.addressArray.push(IndustryArr)
          that.addressArray.push(result[0].sub_addresses)
          that.$apply()
        },
        fail: ({code, data}) => {
        },
        complete: () => {
        }
      })
    }

    hideModal() {
      var animation = wx.createAnimation({
        duration: 200,
        timingFunction: 'linear',
        delay: 0
      })
      this.animation = animation
      animation.translateY(-300).step()
      this.animationData = animation.export()
      setTimeout(function () {
        animation.translateY(0).step()
        this.animationData = animation.export()
        this.showModalStatus = false
        this.$apply()
      }.bind(this), 200)
    }
    methods = {
      pickerChange(index, e) { // picker fn
        console.log(e.detail.value)
        switch (this.information[index].name) {
          case 'name':
          case 'birthday':
          case 'school':
            this.information[index].value = e.detail.value
            break
          case 'sex':
            this.information[index].pickerIndex = e.detail.value
            this.information[index].value = e.detail.value === '0' ? '1' : '2'
            break
          case 'ducation':
            this.information[index].pickerIndex = e.detail.value
            this.information[index].value = this.information[index].pickerList[e.detail.value]
            break
          case 'payType':
            this.information[index].pickerIndex = e.detail.value
            this.information[index].value = e.detail.value == 0 ? 'DAILY' : 'MONTHLY'
            break
        }
        console.log(this.information)
        this.$apply()
      },
      bindMultiPickerChange2(e) {  // type
        console.log(e)
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.multiIndex2 = e.detail.value
        this.information[6].value = e.detail.value
        this.$apply()
      },
      bindMultiPickerColumnChange2(e) {
        let that = this
        that.multiIndex2[e.detail.column] = e.detail.value
        switch (e.detail.column) {
          case 0:
            for (let i = 0; i < that.Business.length; i++) {
              if (that.multiIndex2[0] === i) {
                that.objectMultiArray[1] = that.Business[i].sub_categories
              }
            }
            that.multiIndex2[1] = 0
            break
        }
        that.$apply()
      },
      bindMultiPickerChange(e) { // address
        console.log(e)
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.multiIndex = e.detail.value
        this.information[5].value = e.detail.value
        this.$apply()
      },
      bindMultiPickerColumnChange(e) {
        let that = this
        that.multiIndex[e.detail.column] = e.detail.value
        switch (e.detail.column) {
          case 0:
            for (let i = 0; i < that.address.length; i++) {
              if (that.multiIndex[0] === i) {
                that.addressArray[1] = that.address[i].sub_addresses
              }
            }
            that.multiIndex[1] = 0
            break
        }
        that.$apply()
      },
      ChangeState() {
        if (this.showChangeState) {
          this.showChangeState = false
        } else {
          this.showChangeState = true
        }
        this.$apply()
        console.log(this.showChangeState)
      },
      StateActive(index) {
        let data = {
          type: this.StateList[index].type
        }
        this.$put({url: `${service.host}/change/users//type`, data}, {
          success: ({code, data}) => {
            this.$get({url: service.user}, {
              success: ({code, data}) => {
                this.user = data
                this.$apply()
                wx.setStorageSync('type', data.type)
              }
            })
            for (let idx in this.StateList) {
              if (idx == index) {
                this.StateList[idx].active = true
              } else {
                this.StateList[idx].active = false
              }
              this.$apply()
            }
            console.log('更改成功')
          }
        })
      },
      // 显示对话框
      showModal() {
        // 显示遮罩层
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction: 'linear',
          delay: 0
        })
        this.animation = animation
        animation.translateY(-300).step()
        this.animationData = animation.export()
        this.showModalStatus = true
        this.$apply()
        setTimeout(function () {
          animation.translateY(0).step()
          this.animationData = animation.export()
          this.$apply()
        }.bind(this), 200)
      },
      // 隐藏对话框
      hideModal() {
        // 隐藏遮罩层
        this.hideModal()
      },
      gotofriends(item) {
        let url = ''
        if (item.type == 'single') {
          url = '/pages/home/information?id=' + item.id
        } else {
          url = '/pages/home/introducer?id=' + item.id
        }
        wx.navigateTo({url: url})
      },
      goto(url) {
        wx.navigateTo({url: url})
      },
      save() {
        this.hideModal()
        if (this.type === 'apply') {
          console.log('报名')
        }else{
          console.log('编辑')
        }
        this.$Toast_success('提交成功')
      }
    }
  }
</script>

<style type="less" scoped>
@import "../styles/custom/fn.less";
/*使屏幕变暗  */
.commodity_screen {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background: #000;
  opacity: 0.2;
  overflow: hidden;
  z-index: 10000;
  color: #fff;
}
/*对话框 */
.commodity_attr_box {
  width: 100%;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10001;
  background: #fff;
  box-shadow: 1rpx 6rpx 88rpx #ffffff;
}
.model_page-user{
  overflow-y: auto;
  .user_box{
    position: relative;
    padding-top: 40rpx;
    .bc_image{
      height: auto;
      width: 100%;
      position: absolute;
      left: 0;
      top: 0;
    }
  }
  .user_name{
    background: #F8F8F8;
    border: 1rpx solid #d2d2d2;
    padding: 0 16rpx;
    border-radius: 4rpx;
    display: inline-block;
    margin: auto;
  }
  .noBorder{
    border: none;
    background: none;
  }
  .user_photo{
    width: 182rpx;
    height: 182rpx;
    border: 14rpx solid #fff;
    border-radius: 50%;
    margin: auto;
    position: relative;
    animation:rotate 1500ms 1;
    image{
      width: 182rpx;
      height: 182rpx;
      border-radius: 50%;
      z-index: 99;
    }
  }
  @keyframes rotate {
    0%{
      transform: scale(0.5) rotate(0deg);
    }
    100% {
      transform: scale(1) rotate(360deg);
    }
  }
  .list_item{
    height: 124rpx;
    margin: 0 42rpx;
    border-bottom: 1px solid @f6;
    .item_icon{
      width: 52rpx;
      vertical-align: middle;
      margin-bottom: 4rpx;
      height: auto;
      margin-right: 8rpx;
    }
    .item_title{
      line-height: 124rpx;
      width: 84%;
    }
    .right_icon{
      width: 36rpx;
      vertical-align: middle;
      margin-bottom: 4rpx;
    }
  }
  .alone{
    border: none;
    margin: 0;
    border-top: 16rpx solid @f6;
    padding: 0 42rpx;
  }
  .userInfoBox{
    overflow: hidden;
    margin: 0 30rpx;
    padding: 16rpx 10rpx;
    border-bottom: 2px solid @f6;
    .item_title{
      margin-left: 10rpx;
    }
    .item_value{
      margin: 0 14rpx;
      width: 55%;
    }
    ._bc_item{
      margin-left: 20rpx;
      padding: 32rpx 20rpx 32rpx 0;
      border-bottom: 1rpx solid @gray;
      overflow: hidden;
      ._bc_title{
        color: @dark;
        font-weight: 600;
      }
      ._bc_value,.picker{
        color: @gray;
      }
    }
    ._bc_picker,.picker{
      min-width: 50%;
      height: 100%;
    }
  }
  .bc_btn{
    width: 200rpx;
    height: 68rpx;
    line-height: 68rpx;
    background: @theme;
    border-radius: 46rpx;
    display: inline-block;
    margin: 32rpx;
    box-shadow: 1rpx 1rpx 12rpx @themeBC;
  }
}
</style>
