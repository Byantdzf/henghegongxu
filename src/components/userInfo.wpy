<template>
  <view class="commodity_screen" bindtap="hideModal" wx:if="{{showModalStatus}}"></view>
  <!--弹出框  -->
  <view animation="{{animationData}}" class="commodity_attr_box" wx:if="{{showModalStatus}}">
    <view class="model_page-user ff">
      <view class="user_box text-center">
        <image src="http://images.ufutx.com/201906/21/65a1e16f455b3f05feb9fa1035bde05d.png" mode="widthFix" class="bc_image"></image>
        <view class="user_photo ff">
          <image src="{{photo}}" mode="aspectFill"></image>
        </view>
        <view class="userInfoBox" wx:for="{{userInfoList}}" wx:key="index">
          <view class="item_title flo_l font_30">{{item.title}}:</view>
          <view class="item_value flo_r font_30 bold">
            <input type="text" value="{{item.value}}">
          </view>
        </view>
        <view class="font_30 bc_btn white">提交</view>
      </view>
    </view>
    <view class="clearfloat"></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from '../mixins/base'
  import {service} from '../config.js'
  import http from '../mixins/http'

  export default class modal extends wepy.component {
    mixins = [base, http]
    props = {
      user: {
        type: Object,
        default: {}
      }
    }
    components = {
    }
    data = {
      showModalStatus: false,
      showChangeState: false,
      animationData: {},
      photo: 'http://images.ufutx.com/201902/25/542cc218e40cbc8a8e3a9ce23d7f4789.gif',
      StateText: '',
      userInfoList: [
        {title: '真实姓名', value: '小杨莹'},
        {title: '性别', value: '小杨莹'},
        {title: '出生年月日', value: '小杨莹'},
        {title: '手机号', value: '小杨莹'},
        {title: '学历', value: '小杨莹'},
        {title: '地址', value: '小杨莹'},
        {title: '想要做的工作类型', value: '小杨莹'},
        {title: '倾向的兼职类型', value: '小杨莹'},
      ]
    }
    watch = {
    }

    onLoad() {
      setTimeout(() => {
        this.photo = 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=4259300811,497831842&fm=27&gp=0.jpg'
        this.$apply()
      }, 1200)
    }
    methods = {
      ChangeState() {
        if (this.showChangeState) {
          this.showChangeState = false
        } else {
          this.showChangeState = true
        }
        this.$apply()
        console.log(this.showChangeState)
      },
      StateActive(index) {
        let data = {
          type: this.StateList[index].type
        }
        this.$put({url: `${service.host}/change/users//type`, data}, {
          success: ({code, data}) => {
            this.$get({url: service.user}, {
              success: ({code, data}) => {
                this.user = data
                this.$apply()
                wx.setStorageSync('type', data.type)
              }
            })
            for (let idx in this.StateList) {
              if (idx == index) {
                this.StateList[idx].active = true
              } else {
                this.StateList[idx].active = false
              }
              this.$apply()
            }
            console.log('更改成功')
          }
        })
      },
      // 显示对话框
      showModal() {
        // 显示遮罩层
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction: 'linear',
          delay: 0
        })
        this.animation = animation
        animation.translateY(-300).step()
        this.animationData = animation.export()
        this.showModalStatus = true
        this.$apply()
        setTimeout(function () {
          animation.translateY(0).step()
          this.animationData = animation.export()
          this.$apply()
        }.bind(this), 200)
      },
      // 隐藏对话框
      hideModal() {
        // 隐藏遮罩层
        var animation = wx.createAnimation({
          duration: 200,
          timingFunction: 'linear',
          delay: 0
        })
        this.animation = animation
        animation.translateY(-300).step()
        this.animationData = animation.export()
        setTimeout(function () {
          animation.translateY(0).step()
          this.animationData = animation.export()
          this.showModalStatus = false
          this.$apply()
        }.bind(this), 200)
      },
      gotofriends(item) {
        let url = ''
        if (item.type == 'single') {
          url = '/pages/home/information?id=' + item.id
        } else {
          url = '/pages/home/introducer?id=' + item.id
        }
        wx.navigateTo({url: url})
      },
      goto(url) {
        wx.navigateTo({url: url})
      }
    }
  }
</script>

<style type="less" scoped>
@import "../styles/custom/fn.less";
/*使屏幕变暗  */
.commodity_screen {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background: #000;
  opacity: 0.2;
  overflow: hidden;
  z-index: 10000;
  color: #fff;
}
/*对话框 */
.commodity_attr_box {
  width: 100%;
  overflow: hidden;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10001;
  background: #fff;
  box-shadow: 1rpx 6rpx 88rpx #ffffff;
}
.model_page-user{
  overflow-y: auto;
  .user_box{
    position: relative;
    padding-top: 40rpx;
    .bc_image{
      height: auto;
      width: 100%;
      position: absolute;
      left: 0;
      top: 0;
    }
  }
  .user_name{
    background: #F8F8F8;
    border: 1rpx solid #d2d2d2;
    padding: 0 16rpx;
    border-radius: 4rpx;
    display: inline-block;
    margin: auto;
  }
  .noBorder{
    border: none;
    background: none;
  }
  .user_photo{
    width: 182rpx;
    height: 182rpx;
    border: 14rpx solid #fff;
    border-radius: 50%;
    margin: auto;
    position: relative;
    image{
      width: 182rpx;
      height: 182rpx;
      border-radius: 50%;
      z-index: 99;
    }
  }
  .list_item{
    height: 124rpx;
    margin: 0 42rpx;
    border-bottom: 1px solid @f6;
    /*background: pink;*/
    .item_icon{
      width: 52rpx;
      vertical-align: middle;
      margin-bottom: 4rpx;
      height: auto;
      margin-right: 8rpx;
    }
    .item_title{
      line-height: 124rpx;
      /*background: red;*/
      width: 84%;
    }
    .right_icon{
      width: 36rpx;
      vertical-align: middle;
      margin-bottom: 4rpx;
    }
  }
  .alone{
    border: none;
    margin: 0;
    border-top: 16rpx solid @f6;
    padding: 0 42rpx;
  }
  .userInfoBox{
    overflow: hidden;
    margin: 0 30rpx;
    padding: 16rpx 10rpx;
    border-bottom: 2px solid @f6;
    .item_title{
      margin-left: 10rpx;
      /*text-align: justify;*/
      /*text-align-last:justify;*/
      /*width: 260rpx;*/
    }
    .item_value{
      margin-left: 14rpx;
    }
  }
  .bc_btn{
    width: 200rpx;
    height: 68rpx;
    line-height: 68rpx;
    background: @theme;
    border-radius: 46rpx;
    display: inline-block;
    margin: 32rpx;
    box-shadow: 1rpx 1rpx 12rpx @themeBC;
  }
}
</style>
